version: "3.8"

services:

  my-db:
    image: postgres:16.4
    container_name: hop_db_container
    restart: unless-stopped
    environment:
      POSTGRES_DB: "hop_db"
      POSTGRES_USER: "hop_user"
      POSTGRES_PASSWORD: "hop_password"
    volumes:
      - app_db:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - hop_network
    
  back:
    # build:
    #     context: ./back
    #     dockerfile: Dockerfile
    image: ghcr.io/${REPOSITORY}/back:${SHA}
    restart: unless-stopped
    networks:
      - hop_network
    ports:
      - "8000:8000"
    env_file:
      - back/.env
    volumes:
      - app_data:/data
    depends_on:
      - my-db

  front:
    # build:
    #   context: ./front
    #   dockerfile: Dockerfile
    image: ghcr.io/${REPOSITORY}/front:${SHA}
    restart: unless-stopped
    env_file:
      - front/.env
    depends_on:
      - back
    ports:
      - "3000:3000"
    networks:
      - hop_network
    volumes:
      - app_build:/var/www/app/.next
    # environment:
    #   - NEXT_PUBLIC_API_URL=http://back:8000/api  # Actual runtime URL for backend

  # nginx:
  #   build: ./nginx
  #   container_name: nginx
  #   restart: always
  #   ports:
  #     - '80:80'
  #   volumes:
  #     - ./nginx/cert:/etc/letsencrypt/
  #   networks:
  #     - my_network

volumes:
  app_db:
  app_data:
  app_build:


networks:
  hop_network:
    driver: bridge

